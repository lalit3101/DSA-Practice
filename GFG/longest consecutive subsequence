//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
  public:
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
    int findLongestConseqSubseq(int arr[], int N)
    {
        //Your code here
        int count = 1;
        int max = 1;
        map<int,int> map;
        for(int i = 0; i<N; i++){
             map[arr[i]]=arr[i];
        }
         
        vector<int>elements;
        for(auto it : map){
             elements.push_back(it.second);
        }
         
        for(int i = 0; i<elements.size(); i++){
            if(elements[i]+1 == elements[i+1]){
                count++;
            if(max<count) max = count;
            }
            else{
             count = 1;
            }
     }
     return max;
    }
};

//{ Driver Code Starts.
 
// Driver program
int main()
{
 int  t,n,i,a[100001];
 cin>>t;
 while(t--)
 {
  cin>>n;
  for(i=0;i<n;i++)
  cin>>a[i];
  Solution obj;
  cout<<obj.findLongestConseqSubseq(a, n)<<endl;
 }
      
    return 0;
}
// } Driver Code Ends
