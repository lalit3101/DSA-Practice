// 1st soln using more memory
class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        vector<int>positives;
        vector<int>negatives;
        vector<int> ans;

        for(int i=0; i<nums.size();i++) {
            if(nums[i]<0)
                negatives.push_back(nums[i]);
            else
                positives.push_back(nums[i]);
        }

        for(int i=0; i<nums.size()/2;i++) {
            ans.push_back(positives[i]);
            ans.push_back(negatives[i]);
        }
        return ans;
    }
};

// 2nd soln using 2 pointers
class Solution {
public:
    // 2 pointers solution
    vector<int> rearrangeArray(vector<int>& nums) {
        vector<int> ans(nums.size(),0);
        //positive at even places, negatives at odd
        int pos=0, neg=1;
        for(auto i : nums) { 
            if(i>=0) {
                ans[pos] = i;
                pos+=2; // 0->2->4->6....
            }
            else{
                ans[neg] = i;
                neg+=2; // 1->3->5->7....
            }
        }
        return ans; 
    }
};
