vector<long long> printFirstNegativeInteger(long long int A[], long long int N, long long int K) {
    deque <long long int> dq;
    vector<long long> ans;    
    //processing first window
    for(int i=0; i<K; i++){
        if(A[i]<0){
            dq.push_back(i); //stores index of -ve number
        }
    }
    if(dq.size()>0){
        ans.push_back(A[dq.front()]); //stores the element at the front of the deque
    }
    else{
        ans.push_back(0); // if dq empty means no -ve elements hence push 0
    }
    
    // now processing other elements
    for(int i=K; i<N;i++){
        //remove prev
        if(!dq.empty() && (i-dq.front())>=K){
            dq.pop_front();
        }
        // aage wala ele daalo
        if(A[i]<0){
        dq.push_back(i); //stores index of -ve number
        }
        //store ans
        if(dq.size()>0){
            ans.push_back(A[dq.front()]); //stores the element at the front of the deque
        }
        else{
            ans.push_back(0); // if dq empty means no -ve elements hence push 0
        }
    }
    return ans;
 }
